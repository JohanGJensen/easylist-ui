{"version":3,"file":"static/js/782.0cff95ef.chunk.js","mappings":"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","sources":["components/Header/Header.tsx","api/index.tsx","api/mutations/useMutateSpaces.tsx","views/HomePage/components/HomeHeader.tsx","views/HomePage/components/ItemList/Item.tsx","api/mutations/useMutateItems.tsx","views/HomePage/components/ItemList/ItemList.tsx","views/HomePage/components/Space/ButtonGroup.tsx","views/HomePage/components/Space/Space.tsx","views/HomePage/components/Space/hooks/useProgressPercentage.ts","views/HomePage/index.tsx"],"sourcesContent":["import React from 'react';\n\n// components\nimport { Group } from '@mantine/core';\n\n// styling\nimport './header.css';\n\ninterface IProps {\n  position?: 'apart' | 'left' | 'right';\n  leftContent?: React.ReactNode;\n  rightContent?: React.ReactNode;\n}\n\nconst Header: React.FC<IProps> = (props) => {\n  const { position = 'right', leftContent, rightContent } = props;\n\n  return (\n    <header className=\"header-bar\">\n      <Group position={position} style={{ width: '98%', padding: '6px 0px' }}>\n        {leftContent && <Group spacing={'xs'}>{leftContent}</Group>}\n        {rightContent && <Group spacing={'xs'}>{rightContent}</Group>}\n      </Group>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\nimport { IItemRequest, ISpaceRequest } from '../interfaces';\nimport { IRequestMutation } from './mutations/useMutateItems';\n\nconst HOST = process.env.REACT_APP_API_HOST;\n\nexport const getAllSpaces = () => {\n  return axios.get(`${HOST}/spaces/all`);\n};\n\nexport const postNewSpace = (request: ISpaceRequest) => {\n  return axios.post(`${HOST}/spaces/create`, request);\n};\n\nexport const deleteSpace = (spaceId: string) => {\n  return axios.delete(`${HOST}/spaces/delete/${spaceId}`);\n};\n\nexport const postNewItem = (data: IRequestMutation<IItemRequest>) => {\n  const { spaceId, request } = data;\n  return axios.post(`${HOST}/items/create/${spaceId}`, request);\n};\n\nexport const postItemUpdate = (data: IRequestMutation<IItemRequest>) => {\n  const { spaceId, itemId, request } = data;\n  return axios.post(`${HOST}/items/update/${spaceId}/${itemId}`, request);\n};\n\nexport const deleteItem = (data: IRequestMutation<IItemRequest>) => {\n  const { spaceId, itemId } = data;\n  return axios.delete(`${HOST}/items/delete/${spaceId}/${itemId}`);\n};\n","import { useContext } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { deleteSpace, postNewSpace } from '..';\nimport { SpaceContext } from '../../providers/SpaceProvider';\n\nconst useMutateSpaces = () => {\n  const { handleAddSpace, handleDeleteSpace } = useContext(SpaceContext);\n\n  // Mutations\n  const { mutate: newSpace } = useMutation(postNewSpace, {\n    onSuccess: ({ data: space }) => {\n      handleAddSpace(space);\n    },\n  });\n\n  const { mutate: removeSpace } = useMutation(deleteSpace, {\n    onSuccess: ({ data: space }) => {\n      handleDeleteSpace(space.id);\n    },\n  });\n\n  return { removeSpace, newSpace };\n};\n\nexport default useMutateSpaces;\n","import React, { ChangeEvent } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { SettingsContext } from '../../../providers/SettingsProvider';\n\n// components\nimport Header from '../../../components/Header/Header';\nimport { Button, Select, Group, Input, Modal } from '@mantine/core';\nimport { FilePlus, Settings } from 'tabler-icons-react';\n\n// mutations\nimport useMutateSpaces from '../../../api/mutations/useMutateSpaces';\n\nimport { ISpaceRequest } from '../../../interfaces';\n\nfunction HomeHeader() {\n  const navigate = useNavigate();\n\n  const { lang } = React.useContext(SettingsContext);\n  const [addSpaceModal, setAddSpaceModal] = React.useState<boolean>(false);\n  const [inputValue, setInputValue] = React.useState<string>('');\n  const [inputIsInvalid, setInputInvalid] = React.useState<boolean>(false);\n  const [selectValue, setSelectValue] = React.useState<string>('All');\n\n  const { newSpace } = useMutateSpaces();\n\n  const onAddSpace = () => {\n    const request: ISpaceRequest = {\n      name: inputValue,\n      user: selectValue,\n    };\n\n    newSpace(request);\n\n    onCloseModal();\n  };\n\n  const onChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const value: string = e.target.value;\n\n    if (value === '') {\n      setInputInvalid(true);\n    }\n\n    if (value !== '' && inputIsInvalid) {\n      setInputInvalid(false);\n    }\n\n    setInputValue(value);\n  };\n\n  const onChangeSelect = (e: string) => {\n    setSelectValue(e);\n  };\n\n  const onCloseModal = () => {\n    setAddSpaceModal(false);\n    setInputValue('');\n    setInputInvalid(false);\n    setSelectValue('All');\n  };\n\n  return (\n    <>\n      <Header\n        rightContent={\n          <>\n            <Button onClick={() => setAddSpaceModal(true)} color={'teal'}>\n              <FilePlus />\n            </Button>\n            <Button\n              onClick={() => navigate('/easylist-ui-pwa/settings')}\n              color={'teal'}\n            >\n              <Settings />\n            </Button>\n          </>\n        }\n      />\n      <Modal onClose={onCloseModal} opened={addSpaceModal}>\n        <>\n          <Input\n            value={inputValue}\n            onChange={onChangeInput}\n            icon={<FilePlus size={16} />}\n            placeholder={lang.homeCreateSpaceInputPlaceholder}\n            invalid={inputIsInvalid}\n          />\n          <Select\n            placeholder={lang.spaceUserPlaceholder}\n            data={[\n              { value: 'All', label: lang.spaceUserOptionAll },\n              { value: 'Johan', label: 'Johan' },\n              { value: 'Laura', label: 'Laura' },\n            ]}\n            value={selectValue}\n            onChange={onChangeSelect}\n          />\n          <Group position={'right'} style={{ marginTop: '1.5rem' }}>\n            <Button\n              onClick={onAddSpace}\n              size={'xs'}\n              color={'teal'}\n              disabled={inputValue === ''}\n            >\n              {lang.homeCreateSpaceAddButton}\n            </Button>\n          </Group>\n        </>\n      </Modal>\n    </>\n  );\n}\n\nexport default HomeHeader;\n","import React, { useState, useContext } from 'react';\nimport { SettingsContext } from '../../../../providers/SettingsProvider';\n\n// components\nimport { Text, Group, Checkbox, ActionIcon } from '@mantine/core';\nimport { Trash } from 'tabler-icons-react';\n\n// types\nimport { ISpace, ISpaceItem } from '../../../../interfaces';\n\n// api\nimport useMutateItems from '../../../../api/mutations/useMutateItems';\n\n// styling\n\ninterface IProps {\n  space: ISpace;\n  item: ISpaceItem;\n}\n\nenum CheckBoxPosition {\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nconst Item: React.FC<IProps> = (props) => {\n  const { checkboxPos } = useContext(SettingsContext);\n  const { space, item } = props;\n  const [complete, setComplete] = useState<boolean>(item.complete);\n  const completedStyle = complete ? { textDecoration: 'line-through' } : {};\n\n  const { removeItem, updateItem } = useMutateItems(space);\n\n  const onChange = () => {\n    const request = {\n      id: item.id,\n      name: item.name,\n      complete: !complete,\n    };\n    const data = {\n      spaceId: space.id,\n      itemId: item.id,\n      request: request,\n    };\n\n    setComplete(!complete);\n\n    updateItem(data);\n  };\n\n  const onDelete = () => {\n    const data = { spaceId: space.id, itemId: item.id };\n    removeItem(data);\n  };\n\n  return (\n    <Group position={'apart'}>\n      <Group spacing={'xs'}>\n        {checkboxPos === CheckBoxPosition.LEFT && (\n          <Checkbox onChange={onChange} checked={complete} color={'teal'} />\n        )}\n        <Text\n          style={{ ...completedStyle, maxWidth: '210px' }}\n          color={complete ? 'dimmed' : 'inherit'}\n          size={'lg'}\n        >\n          {item.name}\n        </Text>\n      </Group>\n      <Group spacing={'xs'}>\n        {checkboxPos === CheckBoxPosition.RIGHT && (\n          <Checkbox onChange={onChange} checked={complete} color={'teal'} />\n        )}\n        <ActionIcon onClick={onDelete} size={'sm'} color={'red'}>\n          <Trash />\n        </ActionIcon>\n      </Group>\n    </Group>\n  );\n};\n\nexport default Item;\n","import { useContext } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { deleteItem, postItemUpdate, postNewItem } from '..';\nimport { SpaceContext } from '../../providers/SpaceProvider';\nimport { ISpace } from '../../interfaces';\n\nexport interface IRequestMutation<T> {\n  spaceId?: string;\n  itemId?: string;\n  request?: T;\n}\n\nconst useMutateItems = (space: ISpace) => {\n  const { handleAddItem, handleDeleteItem, handleUpdateItem } =\n    useContext(SpaceContext);\n\n  // Mutations\n  const { mutate: removeItem } = useMutation(deleteItem, {\n    onSuccess: ({ data: item }) => {\n      handleDeleteItem(space, item.id);\n    },\n  });\n\n  const { mutate: updateItem } = useMutation(postItemUpdate, {\n    onSuccess: ({ data: item }) => {\n      handleUpdateItem(space.id, item);\n    },\n  });\n\n  const { mutate: newItem } = useMutation(postNewItem, {\n    onSuccess: ({ data: item }) => {\n      handleAddItem(space.id, item);\n    },\n  });\n\n  return { removeItem, updateItem, newItem };\n};\n\nexport default useMutateItems;\n","import React from 'react';\nimport { SettingsContext } from '../../../../providers/SettingsProvider';\n\n// components\nimport { Text } from '@mantine/core';\nimport Item from './Item';\n\n// types\nimport { ISpace } from '../../../../interfaces';\n\n// styling\n\ninterface IProps {\n  space: ISpace;\n}\n\nconst ItemList: React.FC<IProps> = (props) => {\n  const { lang } = React.useContext(SettingsContext);\n  const { items } = props.space;\n\n  return (\n    <>\n      {items.length ? (\n        items.map((item) => {\n          return (\n            <Item\n              key={`space-${props.space.id}-item-${item.id}`}\n              space={props.space}\n              item={item}\n            />\n          );\n        })\n      ) : (\n        <Text size={'sm'} color={'grey'}>\n          {lang.spaceItemsNoItems}\n        </Text>\n      )}\n    </>\n  );\n};\n\nexport default ItemList;\n","import React, { ChangeEvent } from 'react';\nimport { SettingsContext } from '../../../../providers/SettingsProvider';\nimport { ISpace } from '../../../../interfaces';\n\n// components\nimport { ActionIcon, Group, Modal, Input, Button, Text } from '@mantine/core';\n\n// styling\nimport { Plus, ShoppingCart, Trash } from 'tabler-icons-react';\n\n// mutations\nimport useMutateSpaces from '../../../../api/mutations/useMutateSpaces';\nimport useMutateItems from '../../../../api/mutations/useMutateItems';\n\ninterface IProps {\n  space: ISpace;\n}\n\nconst ButtonGroup: React.FC<IProps> = (props) => {\n  const { lang } = React.useContext(SettingsContext);\n  const { space } = props;\n  const [value, setValue] = React.useState<string>('');\n  const [inputIsInvalid, setInputInvalid] = React.useState<boolean>(false);\n  const [addItemModal, setAddItemModal] = React.useState<boolean>(false);\n  const [deleteItemModal, setDeleteItemModal] = React.useState<boolean>(false);\n\n  const { removeSpace } = useMutateSpaces();\n  const { newItem } = useMutateItems(space);\n\n  const addItem = () => {\n    const request = {\n      name: value,\n      complete: false,\n    };\n    const data = {\n      spaceId: space.id,\n      request: request,\n    };\n\n    newItem(data);\n  };\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value: string = e.target.value;\n\n    if (value === '') {\n      setInputInvalid(true);\n    }\n\n    if (value !== '' && inputIsInvalid) {\n      setInputInvalid(false);\n    }\n\n    setValue(e.target.value);\n  };\n\n  const onModalClose = () => {\n    setAddItemModal(false);\n    setDeleteItemModal(false);\n    setValue('');\n    setInputInvalid(false);\n  };\n\n  const onAddItemAndMore = () => {\n    addItem();\n    setValue('');\n  };\n\n  const onAddItemAndClose = () => {\n    addItem();\n    onModalClose();\n  };\n\n  const onDeleteSpace = () => {\n    removeSpace(space.id);\n\n    setDeleteItemModal(false);\n  };\n\n  return (\n    <>\n      <Group spacing={'md'}>\n        <ActionIcon\n          onClick={() => setAddItemModal(true)}\n          size={'sm'}\n          color={'teal'}\n        >\n          <Plus />\n        </ActionIcon>\n        <ActionIcon\n          onClick={() => setDeleteItemModal(true)}\n          size={'sm'}\n          color={'red'}\n        >\n          <Trash />\n        </ActionIcon>\n      </Group>\n      <Modal onClose={onModalClose} opened={addItemModal}>\n        <>\n          <Input\n            value={value}\n            onChange={onChange}\n            icon={<ShoppingCart size={16} />}\n            placeholder={lang.spaceAddItemInputPlaceholder}\n            invalid={inputIsInvalid}\n          />\n          <Group position={'right'} style={{ marginTop: '1.5rem' }}>\n            <Button\n              onClick={onAddItemAndMore}\n              size={'xs'}\n              color={'teal'}\n              disabled={value === ''}\n            >\n              {lang.spaceAddItemButtonMore}\n            </Button>\n            <Button\n              onClick={onAddItemAndClose}\n              size={'xs'}\n              color={'teal'}\n              disabled={value === ''}\n            >\n              {lang.spaceAddItemButtonClose}\n            </Button>\n          </Group>\n        </>\n      </Modal>\n      <Modal onClose={onModalClose} opened={deleteItemModal}>\n        <>\n          <Text align={'center'}>{lang.spaceDeleteSpaceWarning}</Text>\n          <Group position={'right'} style={{ marginTop: '1.5rem' }}>\n            <Button onClick={onDeleteSpace} size={'xs'} color={'red'}>\n              {lang.spaceDeleteSpaceButton}\n            </Button>\n          </Group>\n        </>\n      </Modal>\n    </>\n  );\n};\n\nexport default ButtonGroup;\n","import React from 'react';\n\n// components\nimport { Card, Text, Divider, Group, Stack, Progress } from '@mantine/core';\nimport ItemList from '../ItemList/ItemList';\nimport ButtonGroup from './ButtonGroup';\n\n// types\nimport { ISpace } from '../../../../interfaces';\n\n// hooks\nimport { useProgressPercentage } from './hooks/useProgressPercentage';\n\ninterface IProps {\n  space: ISpace;\n}\n\nconst HomePage: React.FC<IProps> = (props) => {\n  const { space } = props;\n  const percentage = useProgressPercentage(space);\n\n  return (\n    <Card shadow=\"sm\" p=\"lg\" style={{ marginBottom: '1.2rem' }}>\n      <Group position={'apart'}>\n        <Stack spacing={'xs'}>\n          <Text size={'xl'} weight={500}>\n            {space.name}\n          </Text>\n          <Text size={'sm'}>{space.user}</Text>\n        </Stack>\n        <ButtonGroup space={space} />\n      </Group>\n      <Divider my=\"sm\" />\n      <ItemList space={space} />\n      {percentage >= 0 && (\n        <>\n          <Divider my=\"sm\" />\n          <Progress\n            value={percentage}\n            color={percentage >= 100 ? 'teal' : 'blue'}\n            size={'lg'}\n          />\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { SpaceContext } from '../../../../../providers/SpaceProvider';\n\n// types\nimport { ISpace } from '../../../../../interfaces';\n\nexport const useProgressPercentage = (space: ISpace) => {\n  const { data } = React.useContext(SpaceContext);\n  const [percentage, setPercentage] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    const totalItemCount = space.items.length;\n    let checkedItemCount = 0;\n\n    space.items.forEach((item) => {\n      item.complete && (checkedItemCount += 1);\n    });\n\n    const decimal = checkedItemCount / totalItemCount;\n    const percent = decimal * 100;\n\n    setPercentage(percent);\n  }, [data, space.items]);\n\n  return percentage;\n};\n","import React, { useContext } from 'react';\n\n// components\nimport HomeHeader from './components/HomeHeader';\nimport { Container, LoadingOverlay } from '@mantine/core';\nimport Space from './components/Space/Space';\n\n// styling\nimport './homepage.css';\n\n// types\nimport { ISpace } from '../../interfaces';\n\nimport { getAllSpaces } from '../../api';\nimport { useQuery } from '@tanstack/react-query';\nimport { SpaceContext } from '../../providers/SpaceProvider';\n\nfunction HomePage() {\n  const { data, handleSetAllSpaces } = useContext(SpaceContext);\n\n  const { isLoading } = useQuery(['spaces'], getAllSpaces, {\n    onSuccess: ({ data: spaces }) => {\n      handleSetAllSpaces(spaces);\n    },\n    staleTime: 6000,\n  });\n\n  return (\n    <>\n      <LoadingOverlay visible={isLoading} />\n      <HomeHeader />\n      <Container>\n        {data &&\n          data.map((space: ISpace) => {\n            return <Space key={`space-${space.id}`} space={space} />;\n          })}\n      </Container>\n    </>\n  );\n}\n\nexport default HomePage;\n"],"names":["props","position","leftContent","rightContent","className","Group","style","width","padding","spacing","HOST","process","getAllSpaces","axios","postNewSpace","request","deleteSpace","spaceId","postNewItem","data","postItemUpdate","itemId","deleteItem","useContext","SpaceContext","handleAddSpace","handleDeleteSpace","newSpace","useMutation","onSuccess","space","mutate","removeSpace","id","CheckBoxPosition","navigate","useNavigate","lang","React","SettingsContext","addSpaceModal","setAddSpaceModal","inputValue","setInputValue","inputIsInvalid","setInputInvalid","selectValue","setSelectValue","useMutateSpaces","onCloseModal","Header","Button","onClick","color","Modal","onClose","opened","Input","I","value","onChange","e","target","icon","size","placeholder","homeCreateSpaceInputPlaceholder","invalid","Select","spaceUserPlaceholder","label","spaceUserOptionAll","marginTop","name","user","disabled","homeCreateSpaceAddButton","handleAddItem","handleDeleteItem","handleUpdateItem","removeItem","item","updateItem","newItem","checkboxPos","useState","complete","setComplete","completedStyle","textDecoration","useMutateItems","LEFT","Checkbox","checked","Text","maxWidth","RIGHT","ActionIcon","A","items","length","map","spaceItemsNoItems","setValue","addItemModal","setAddItemModal","deleteItemModal","setDeleteItemModal","addItem","onModalClose","spaceAddItemInputPlaceholder","spaceAddItemButtonMore","spaceAddItemButtonClose","align","spaceDeleteSpaceWarning","spaceDeleteSpaceButton","percentage","setPercentage","totalItemCount","checkedItemCount","forEach","useProgressPercentage","Card","shadow","p","marginBottom","Stack","weight","Divider","my","Progress","handleSetAllSpaces","isLoading","useQuery","spaces","staleTime","LoadingOverlay","visible","Container","Space"],"sourceRoot":""}