{"version":3,"file":"static/js/782.9406ff8d.chunk.js","mappings":"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","sources":["components/Header/Header.tsx","api/index.tsx","api/mutations/useMutateSpaces.tsx","views/HomePage/components/HomeHeader.tsx","views/HomePage/components/ItemList/Item.tsx","api/mutations/useMutateItems.tsx","views/HomePage/components/ItemList/ItemList.tsx","views/HomePage/components/Space/ButtonGroup.tsx","views/HomePage/components/Space/Space.tsx","views/HomePage/components/Space/hooks/useProgressPercentage.ts","views/HomePage/index.tsx"],"sourcesContent":["import React from 'react';\n\n// components\nimport { Group } from '@mantine/core';\n\n// styling\nimport './header.css';\n\ninterface IProps {\n  position?: 'apart' | 'left' | 'right';\n  leftContent?: React.ReactNode;\n  rightContent?: React.ReactNode;\n}\n\nconst Header: React.FC<IProps> = (props) => {\n  const {\n    position = 'right',\n    leftContent,\n    rightContent\n  } = props;\n\n  return (\n    <header className=\"header-bar\">\n      <Group position={position} style={{ width: '98%', padding: '6px 0px' }}>\n        {leftContent &&\n          <Group spacing={'xs'}>\n            {leftContent}\n          </Group>\n        }\n        {rightContent &&\n          <Group spacing={'xs'}>\n            {rightContent}\n          </Group>\n        }\n      </Group>\n    </header>\n  );\n}\n\nexport default Header;\n","import axios from \"axios\";\nimport { IItemRequest, ISpaceRequest } from \"../interfaces\";\n\ninterface IRequestMutation<T> {\n  spaceId?: string;\n  itemId?: string;\n  request: T;\n}\n\n// const HOST = 'http://localhost:8080'\nconst HOST = 'https://easylist-api.onrender.com';\n\nexport const getAllSpaces = () => {\n  return axios.get(`${HOST}/spaces/all`);\n};\n\nexport const postNewSpace = (request: ISpaceRequest) => {\n  return axios.post(`${HOST}/spaces/create`, request);\n};\n\nexport const deleteSpace = (spaceId: string) => {\n  return axios.delete(`${HOST}/spaces/delete/${spaceId}`);\n};\n\nexport const postNewItem = (data: IRequestMutation<IItemRequest>) => {\n  const {spaceId, request} = data;\n  return axios.post(`${HOST}/items/create/${spaceId}`, request);\n};\n\nexport const postItemUpdate = (data: IRequestMutation<IItemRequest>) => {\n  const { spaceId, itemId, request } = data;\n  return axios.post(`${HOST}/items/update/${spaceId}/${itemId}`, request);\n};\n\nexport const deleteItem = (data: IRequestMutation<IItemRequest>) => {\n  const { spaceId, itemId } = data;\n  return axios.delete(`${HOST}/items/delete/${spaceId}/${itemId}`);\n};","import { useContext } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { deleteSpace, postNewSpace } from '..';\nimport { SpaceContext } from '../../providers/SpaceProvider';\n\nconst useMutateSpaces = () => {\n  const { handleAddSpace, handleDeleteSpace } = useContext(SpaceContext);\n\n  // Mutations\n  const { mutate: newSpace } = useMutation(postNewSpace, {\n    onSuccess: ({ data: space }) => {\n      handleAddSpace(space);\n    }\n  });\n\n  const { mutate: removeSpace } = useMutation(deleteSpace, {\n    onSuccess: ({ data: space }) => {\n      handleDeleteSpace(space.id);\n    }\n  });\n\n  return { removeSpace, newSpace }\n};\n\nexport default useMutateSpaces;","import React, { ChangeEvent } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { SettingsContext } from '../../../providers/SettingsProvider';\n\n// components\nimport Header from '../../../components/Header/Header';\nimport { Button, Select, Group, Input, Modal } from '@mantine/core';\nimport { FilePlus, Settings } from 'tabler-icons-react';\n\n// mutations\nimport useMutateSpaces from '../../../api/mutations/useMutateSpaces';\n\nimport { ISpaceRequest } from '../../../interfaces';\n\nfunction HomeHeader() {\n  const navigate = useNavigate();\n\n  const { lang } = React.useContext(SettingsContext);\n  const [addSpaceModal, setAddSpaceModal] = React.useState<boolean>(false);\n  const [inputValue, setInputValue] = React.useState<string>('');\n  const [inputIsInvalid, setInputInvalid] = React.useState<boolean>(false);\n  const [selectValue, setSelectValue] = React.useState<string>('All');\n\n  const { newSpace } = useMutateSpaces();\n \n  const onAddSpace = () => {\n    const request: ISpaceRequest = {\n      name: inputValue,\n      user: selectValue\n    };\n\n    newSpace(request);\n\n    onCloseModal();\n  };\n\n  const onChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const value: string = e.target.value;\n\n    if (value === '') {\n      setInputInvalid(true);\n    }\n\n    if (value !== '' && inputIsInvalid) {\n      setInputInvalid(false);\n    }\n\n    setInputValue(value);\n  };\n\n  const onChangeSelect = (e: string) => {\n    setSelectValue(e);\n  };\n\n  const onCloseModal = () => {\n    setAddSpaceModal(false);\n    setInputValue('');\n    setInputInvalid(false);\n    setSelectValue('All');\n  };\n\n  return (\n    <>\n      <Header\n        rightContent={\n          <>\n            <Button onClick={() => setAddSpaceModal(true)} color={'teal'} children={<FilePlus />} />\n            <Button onClick={() => navigate('/easylist-ui-pwa/settings')} color={'teal'} children={<Settings />} />\n          </>\n        }\n      />\n      <Modal onClose={onCloseModal} opened={addSpaceModal} children={\n        <>\n          <Input\n            value={inputValue}\n            onChange={onChangeInput}\n            icon={<FilePlus size={16} />}\n            placeholder={lang.homeCreateSpaceInputPlaceholder}\n            invalid={inputIsInvalid}\n          />\n          <Select\n            placeholder={lang.spaceUserPlaceholder}\n            data={[\n              { value: 'All', label: lang.spaceUserOptionAll },\n              { value: 'Johan', label: 'Johan' },\n              { value: 'Laura', label: 'Laura' },\n            ]}\n            value={selectValue}\n            onChange={onChangeSelect}\n          />\n          <Group position={'right'} style={{ marginTop: '1.5rem' }}>\n            <Button\n              onClick={onAddSpace}\n              size={'xs'}\n              color={'teal'}\n              children={lang.homeCreateSpaceAddButton}\n              disabled={inputValue === ''}\n            />\n          </Group>\n        </>\n      } />\n    </>\n  );\n}\n\nexport default HomeHeader;\n","import React, { useState, useContext } from 'react';\nimport { SettingsContext } from '../../../../providers/SettingsProvider';\n\n// components\nimport { Text, Group, Checkbox, ActionIcon } from '@mantine/core';\nimport { Trash } from 'tabler-icons-react';\n\n// types\nimport { ISpace, ISpaceItem } from '../../../../interfaces';\n\n// api\nimport useMutateItems from '../../../../api/mutations/useMutateItems';\n\n// styling\n\ninterface IProps {\n  space: ISpace;\n  item: ISpaceItem;\n}\n\nenum CheckBoxPosition {\n  LEFT = 'left',\n  RIGHT = 'right'\n}\n\nconst Item: React.FC<IProps> = (props) => {\n  const { checkboxPos } = useContext(SettingsContext);\n  const { space, item } = props;\n  const [complete, setComplete] = useState<boolean>(item.complete);\n  const completedStyle = complete ? { textDecoration: 'line-through' } : {};\n\n  const { removeItem, updateItem } = useMutateItems(space, item);\n\n  const onChange = () => {\n    const request = {\n      id: item.id,\n      name: item.name,\n      complete: !complete\n    };\n    const data = {\n      spaceId: space.id,\n      itemId: item.id,\n      request: request,\n    };\n  \n    setComplete(!complete);\n\n    updateItem(data);\n  }\n\n  const onDelete = () => {\n    const data = { spaceId: space.id, itemId: item.id };\n    removeItem(data);\n  };\n\n  return (\n    <Group position={'apart'}>\n      <Group spacing={'xs'}>\n        {\n          checkboxPos === CheckBoxPosition.LEFT &&\n          <Checkbox onChange={onChange} checked={complete} color={'teal'} />\n        }\n        <Text\n          style={{ ...completedStyle, maxWidth: '210px' }}\n          color={complete ? 'dimmed' : 'inherit'}\n          size={'lg'}\n        >{item.name}</Text>\n      </Group>\n      <Group spacing={'xs'}>\n        {\n          checkboxPos === CheckBoxPosition.RIGHT &&\n          <Checkbox onChange={onChange} checked={complete} color={'teal'} />\n        }\n        <ActionIcon onClick={onDelete} size={'sm'} color={'red'} children={<Trash />} />\n      </Group>\n    </Group>\n  );\n}\n\nexport default Item;\n","import { useContext } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { deleteItem, postItemUpdate, postNewItem } from '..';\nimport { SpaceContext } from '../../providers/SpaceProvider';\nimport { ISpace } from '../../interfaces';\n\nconst useMutateItems = (space: ISpace) => {\n  const {\n    handleAddItem,\n    handleDeleteItem,\n    handleUpdateItem\n  } = useContext(SpaceContext);\n\n  // Mutations\n  const { mutate: removeItem } = useMutation(deleteItem, {\n    onSuccess: ({ data: item }) => {\n      handleDeleteItem(space, item.id);\n    }\n  });\n\n  const { mutate: updateItem } = useMutation(postItemUpdate, {\n    onSuccess: ({ data: item }) => {\n      handleUpdateItem(space.id, item);\n    }\n  });\n\n  const { mutate: newItem } = useMutation(postNewItem, {\n    onSuccess: ({ data: item }) => {\n      handleAddItem(space.id, item);\n    },\n  });\n\n  return { removeItem, updateItem, newItem };\n};\n\nexport default useMutateItems;","import React from 'react';\nimport { SettingsContext } from '../../../../providers/SettingsProvider';\n\n// components\nimport { Text } from '@mantine/core';\nimport Item from './Item';\n\n// types\nimport { ISpace } from '../../../../interfaces';\n\n// styling\n\ninterface IProps {\n\tspace: ISpace;\n}\n\nconst ItemList: React.FC<IProps> = (props) => {\n\tconst { lang } = React.useContext(SettingsContext);\n\tconst { items } = props.space;\n\n\treturn (\n\t\t<>\n\t\t\t{items.length ? items.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tkey={`space-${props.space.id}-item-${item.id}`}\n\t\t\t\t\t\tspace={props.space}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})\n\t\t\t\t:\n\t\t\t\t<Text size={'sm'} color={'grey'}>{lang.spaceItemsNoItems}</Text>}\n\t\t</>\n\t);\n}\n\nexport default ItemList;\n","import React, { ChangeEvent } from 'react';\nimport { SettingsContext } from '../../../../providers/SettingsProvider';\nimport { ISpace } from '../../../../interfaces';\n\n// components\nimport { ActionIcon, Group, Modal, Input, Button, Text } from '@mantine/core';\n\n// styling\nimport { Plus, ShoppingCart, Trash } from 'tabler-icons-react';\n\n// mutations\nimport useMutateSpaces from '../../../../api/mutations/useMutateSpaces';\nimport useMutateItems from '../../../../api/mutations/useMutateItems';\n\ninterface IProps {\n  space: ISpace;\n}\n\nconst ButtonGroup: React.FC<IProps> = (props) => {\n  const { lang } = React.useContext(SettingsContext);\n  const { space } = props;\n  const [value, setValue] = React.useState<string>('');\n  const [inputIsInvalid, setInputInvalid] = React.useState<boolean>(false);\n  const [addItemModal, setAddItemModal] = React.useState<boolean>(false);\n  const [deleteItemModal, setDeleteItemModal] = React.useState<boolean>(false);\n\n  const { removeSpace } = useMutateSpaces();\n  const { newItem } = useMutateItems(space);\n\n  const addItem = () => {\n    const request = {\n      name: value,\n      complete: false,\n    };\n    const data = {\n      spaceId: space.id,\n      request: request\n    };\n\n    newItem(data);\n  };\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value: string = e.target.value;\n\n    if (value === '') {\n      setInputInvalid(true);\n    }\n\n    if (value !== '' && inputIsInvalid) {\n      setInputInvalid(false);\n    }\n\n    setValue(e.target.value);\n  };\n\n  const onModalClose = () => {\n    setAddItemModal(false);\n    setDeleteItemModal(false);\n    setValue('');\n    setInputInvalid(false);\n  };\n\n  const onAddItemAndMore = () => {\n    addItem();\n    setValue('');\n  };\n\n  const onAddItemAndClose = () => {\n    addItem();\n    onModalClose();\n  };\n\n  const onDeleteSpace = () => {\n    removeSpace(space.id);\n\n    setDeleteItemModal(false);\n  };\n\n  return (\n    <>\n      <Group spacing={'md'}>\n        <ActionIcon onClick={() => setAddItemModal(true)} size={'sm'} color={'teal'} children={<Plus />} />\n        <ActionIcon onClick={() => setDeleteItemModal(true)} size={'sm'} color={'red'} children={<Trash />} />\n      </Group>\n      <Modal onClose={onModalClose} opened={addItemModal} children={\n        <>\n          <Input\n            value={value}\n            onChange={onChange}\n            icon={<ShoppingCart size={16} />}\n            placeholder={lang.spaceAddItemInputPlaceholder}\n            invalid={inputIsInvalid}\n          />\n          <Group position={'right'} style={{ marginTop: '1.5rem' }}>\n            <Button\n              onClick={onAddItemAndMore}\n              size={'xs'}\n              color={'teal'}\n              children={lang.spaceAddItemButtonMore}\n              disabled={value === ''}\n            />\n            <Button\n              onClick={onAddItemAndClose}\n              size={'xs'}\n              color={'teal'}\n              children={lang.spaceAddItemButtonClose}\n              disabled={value === ''}\n            />\n          </Group>\n        </>\n      } />\n      <Modal onClose={onModalClose} opened={deleteItemModal} children={\n        <>\n          <Text align={'center'} children={lang.spaceDeleteSpaceWarning} />\n          <Group position={'right'} style={{ marginTop: '1.5rem' }}>\n            <Button\n              onClick={onDeleteSpace}\n              size={'xs'}\n              color={'red'}\n              children={lang.spaceDeleteSpaceButton}\n            />\n          </Group>\n        </>\n      } />\n    </>\n  );\n}\n\nexport default ButtonGroup;\n","import React from 'react';\n\n// components\nimport { Card, Text, Divider, Group, Stack, Progress } from '@mantine/core';\nimport ItemList from '../ItemList/ItemList';\nimport ButtonGroup from './ButtonGroup';\n\n// types\nimport { ISpace } from '../../../../interfaces';\n\n// hooks\nimport { useProgressPercentage } from './hooks/useProgressPercentage';\n\ninterface IProps {\n  space: ISpace;\n}\n\nconst HomePage: React.FC<IProps> = (props) => {\n  const { space } = props;\n  const percentage = useProgressPercentage(space);\n\n  return (\n    <Card shadow=\"sm\" p=\"lg\" style={{ marginBottom: '1.2rem' }}>\n      <Group position={'apart'}>\n        <Stack spacing={'xs'}>\n          <Text size={'xl'} weight={500}>{space.name}</Text>\n          <Text size={'sm'}>{space.user}</Text>\n        </Stack>\n        <ButtonGroup space={space} />\n      </Group>\n      <Divider my=\"sm\" />\n      <ItemList space={space} />\n      {\n        percentage >= 0 &&\n        <>\n          <Divider my=\"sm\" />\n          <Progress\n            value={percentage}\n            color={percentage >= 100 ? 'teal' : 'blue'}\n            size={'lg'}\n          />\n        </>\n      }\n    </Card>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { SpaceContext } from '../../../../../providers/SpaceProvider';\n\n// types\nimport { ISpace } from '../../../../../interfaces';\n\nexport const useProgressPercentage = (space: ISpace) => {\n  const { data } = React.useContext(SpaceContext);\n  const [percentage, setPercentage] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    let totalItemCount: number = space.items.length;\n    let checkedItemCount: number = 0;\n\n    space.items.forEach(item => {\n      item.complete && (checkedItemCount += 1);\n    });\n\n    const decimal = checkedItemCount / totalItemCount;\n    const percent = decimal * 100;\n\n    setPercentage(percent);\n  }, [data, space.items]);\n\n  return percentage;\n};","import React, { useContext } from 'react';\n\n// components\nimport HomeHeader from './components/HomeHeader';\nimport { Container, LoadingOverlay } from '@mantine/core';\nimport Space from './components/Space/Space';\n\n// styling\nimport './homepage.css';\n\n// types\nimport { ISpace } from '../../interfaces';\n\nimport { getAllSpaces } from '../../api';\nimport { useQuery } from '@tanstack/react-query';\nimport { SpaceContext } from '../../providers/SpaceProvider';\n\nfunction HomePage() {\n  const { data, handleSetAllSpaces } = useContext(SpaceContext);\n\n  const { isLoading  } = useQuery(['spaces'], getAllSpaces, {\n    onSuccess: ({ data: spaces }) => {\n      handleSetAllSpaces(spaces);\n    },\n    staleTime: 6000\n  });\n\n  return (\n    <>\n      <LoadingOverlay visible={isLoading} />\n      <HomeHeader />\n      <Container>\n        {data && data.map((space: ISpace) => {\n          return (\n            <Space key={`space-${space.id}`} space={space} />\n          )\n        })}\n      </Container>\n    </>\n  );\n}\n\nexport default HomePage;\n"],"names":["props","position","leftContent","rightContent","className","Group","style","width","padding","spacing","HOST","getAllSpaces","axios","postNewSpace","request","deleteSpace","spaceId","postNewItem","data","postItemUpdate","itemId","deleteItem","useContext","SpaceContext","handleAddSpace","handleDeleteSpace","newSpace","useMutation","onSuccess","space","mutate","removeSpace","id","CheckBoxPosition","navigate","useNavigate","lang","React","SettingsContext","addSpaceModal","setAddSpaceModal","inputValue","setInputValue","inputIsInvalid","setInputInvalid","selectValue","setSelectValue","useMutateSpaces","onCloseModal","Header","Button","onClick","color","children","Modal","onClose","opened","Input","I","value","onChange","e","target","icon","size","placeholder","homeCreateSpaceInputPlaceholder","invalid","Select","spaceUserPlaceholder","label","spaceUserOptionAll","marginTop","name","user","homeCreateSpaceAddButton","disabled","handleAddItem","handleDeleteItem","handleUpdateItem","removeItem","item","updateItem","newItem","checkboxPos","useState","complete","setComplete","completedStyle","textDecoration","useMutateItems","LEFT","Checkbox","checked","Text","maxWidth","RIGHT","ActionIcon","A","items","length","map","spaceItemsNoItems","setValue","addItemModal","setAddItemModal","deleteItemModal","setDeleteItemModal","addItem","onModalClose","spaceAddItemInputPlaceholder","spaceAddItemButtonMore","spaceAddItemButtonClose","align","spaceDeleteSpaceWarning","spaceDeleteSpaceButton","percentage","setPercentage","totalItemCount","checkedItemCount","forEach","useProgressPercentage","Card","shadow","p","marginBottom","Stack","weight","Divider","my","Progress","handleSetAllSpaces","isLoading","useQuery","spaces","staleTime","LoadingOverlay","visible","Container","Space"],"sourceRoot":""}